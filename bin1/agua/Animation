Timeline animations are defined using KeyFrame objects, created via the KeyFrame class.
This KeyFrame class allows you to create and manage the KeyFrame objects that live inside the Timeline object. 
Those familiar with animation know keyframes set the different interpolated data values for different points in the animation of an object or data value to create smooth movements.
 KeyFrame objects will always be processed by Timeline objects according to a time variable (accessed using KeyFrame.time) 
and by properties to be animated, which are defined using the KeyFrame object’s values and accessed using the KeyFrame.values variable. 

 set up your KeyFrame objects before you start running the Timeline object, as you cannot change a KeyFrame object within a running Timeline object. 
  If you wanted to change a KeyFrame object in a running Timeline object in any way, first stop the Timeline object, then make the change to the KeyFrame, and then restart the Timeline object. 
  This will reload the Timeline object and its revised KeyFrame objects into memory along with their new values. 
  
   the ParallelTransition, which executes property transitions at the same time, 
   and SequentialTransition, which executes a string of property transitions serially (one after the other). 
   
   In addition to the .interpolate() method, 
   any subclass extending Transition will be required to set a duration for an Animation cycle using the Animation.setCycleDuration(javafx.util.Duration) method call.